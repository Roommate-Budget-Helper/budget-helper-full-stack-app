name: CD Pipeline
on:
  push:
    branches:
      - main
env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET}}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
  COGNITO_USER_POOL: ${{ secrets.COGNITO_USER_POOL }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET}}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    name: Deploy RBH
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ./app/package-lock.json
      - name: Install Dependencies
        run: npm ci
      - name: Build container image
        run: docker build -t rbh-app .
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker tag rbh-app:latest $ECR_REGISTRY/rbh-app:latest
      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: rbh-app
          IMAGE_TAG: latest
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
      - name: Force deployment
        run: |
          aws ecs stop-task --cluster "rbh-web-production" --task $(aws ecs list-tasks --cluster "rbh-web-production" --service "rbh-web" --output text --query taskArns[0])
