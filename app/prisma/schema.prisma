generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  Occupies      Occupies[]
  sessions      Session[]
  Invitation    Invitation[]
  Charges       Charge[]
}

model Home {
  id         String       @id @default(cuid())
  name       String
  image      String?
  address    String
  Occupies   Occupies[]
  Invitation Invitation[]
  Charges    Charge[]
}

model Occupies {
  userId String
  homeId String
  home   Home   @relation(fields: [homeId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, homeId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Invitation {
  initiatorId String
  homeId      String
  email       String
  home        Home   @relation(fields: [homeId], references: [id], onDelete: Cascade)
  user        User   @relation(fields: [initiatorId], references: [id], onDelete: Cascade)

  @@unique([homeId, email])
}

model Charge {
  chargeId String @id @default(cuid())
  chargerId String
  homeId String
  email String
  amount String
  comment String
  created DateTime
  dueDate DateTime
  paid Boolean
  confirmed Boolean
  home Home @relation(fields: [homeId], references: [id], onDelete: Cascade)
  user User @relation(fields: [chargerId], references: [id], onDelete: Cascade)

  @@unique([homeId, email, chargeId])
}
